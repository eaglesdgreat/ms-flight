# This is a basic workflow to help you get started with Actions

name: Flights CICD

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  create:
    tags:
      - v*

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      # Make shell scripts executable
      - name: Make shell scripts executable
        run: |
          chmod +x shell/*.sh
          # If you have scripts in other directories, add them too
          # chmod +x scripts/*.sh
          # chmod +x *.sh

      - name: Verify script permissions
        run: |
          echo "Verifying shell scripts permissions"
          ls -la shell/*.sh
          file shell/*.sh

      # Install docker-compose before running make test
      - name: Install docker-compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version

      # Start services and check their status
      - name: Start services and check status
        run: |
          make start
          sleep 10  # Wait for containers to initialize
          echo "Container status:"
          docker-compose -p msupandrunning ps -a
          echo "Container logs:"
          docker-compose -p msupandrunning logs

      # Test the service using the make file
      - name: Run Unit Tests
        run: make test

      # Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Push the image to Docker Hub
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/flights:latest
            ${{ secrets.DOCKER_USERNAME }}/flights:${{ github.ref_name }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
